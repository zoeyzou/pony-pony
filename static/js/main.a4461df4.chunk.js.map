{"version":3,"sources":["assets/img/pony.png","assets/img/domokun.png","assets/img/exit.png","assets/img/cover.png","assets/img/dot-background.png","types/pony.ts","components/slider/slider.styles.tsx","components/label/label.styles.tsx","components/label/index.tsx","components/slider/index.tsx","components/select/select.styles.tsx","components/select/index.tsx","stores/settings/selectors.ts","stores/settings/slice.ts","stores/game/selectors.ts","containers/game-setting/game-setting.styles.tsx","types/directions.ts","containers/game-setting/components/instructions.tsx","containers/game-setting/index.tsx","containers/game-setting/utils/helpers.ts","components/maze/maze.styles.tsx","components/maze/utils/helpers.tsx","components/maze/components/maze-cell.tsx","components/image/image.styles.tsx","components/image/index.tsx","components/maze/components/pawn.tsx","components/maze/index.tsx","utils/request.ts","stores/game/api.ts","stores/game/thunks.ts","stores/game/slice.ts","containers/game/game.styles.tsx","containers/game/index.tsx","utils/keyboard-actions.ts","containers/game/utils/constants.ts","components/button/button.styles.tsx","components/button/index.tsx","containers/control/control.styles.tsx","containers/control/index.tsx","containers/app/app.styles.tsx","containers/app/index.tsx","stores/utils/logger.ts","stores/counter/slice.ts","stores/store.ts","serviceWorker.ts","sc/theme.ts","sc/global-styles.ts","index.tsx"],"names":["module","exports","Pony","SliderContainer","styled","div","SliderWrapper","Slider","input","theme","colors","secondary","primary","Output","output","show","Display","span","Label","label","children","rest","min","max","value","title","onChangeHandler","useState","val","setVal","isPressed","setPressed","useEffect","aria-label","type","onMouseDown","onMouseUp","onChange","evt","evtVal","Number","currentTarget","SelectWrapper","fonts","body","dark","Select","select","Option","option","light","Arrow","defaultValue","options","placeholder","key","map","index","selectSettings","state","settings","selectSizeRange","minLength","maxLength","selectDifficultyRange","minDifficulty","maxDifficulty","SettingsSlice","createSlice","name","initialState","width","height","difficultyLevel","currentPony","reducers","changeWidth","action","payload","changeHeight","changeDifficulty","changePony","resetSettings","actions","selectGame","game","selectFetchPending","fetchingState","movement","selectHasStarted","ponyPos","domokunPos","exit","mazeData","length","gameStatus","selectHasFinished","hiddenUrl","selectUrl","Direction","GameSettingWrapper","section","breakpoints","tablet","InstructionWrapper","Instructions","GameSetting","dispatch","useDispatch","sizeRange","useSelector","levelRange","hasGameStarted","Object","values","pony","Maze","size","CellWrapper","walls","includes","north","css","west","south","east","Cell","getCellWalls","data","directions","push","isWalls","isMazeWall","MazeCell","StyledImage","img","Image","alt","Pawn","src","domokun","endPointPos","ponyStartingPos","domokunStartingPos","cell","helpers","request","url","requestBody","a","query","basicRequest","method","headers","Accept","JSON","stringify","fetch","response","json","BASE_URL","getGameId","difficulty","loadGame","id","movePony","direction","gameSlice","gameId","setGameId","initiateGame","gameState","toLowerCase","startFetching","finishFetching","errorFetching","setGameStatus","updateGame","resetGame","undefined","getGameThunk","getState","idRes","maze_id","movePonyThunk","moveRes","GameWrapper","Game","hasStarted","hasFinished","isFetching","gameEndUrl","keyPressHandler","preventDefault","stopPropagation","document","addEventListener","removeEventListener","image","ponyCover","StyledButton","button","Button","React","forwardRef","ref","ariaLabel","onClick","disabled","ControlWrapper","Control","PageLayout","main","mobile","App","logger","store","next","console","group","info","result","log","groupEnd","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","settingsReducer","gameReducer","middleware","loggerMiddleware","getDefaultMiddleware","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","dotBackground","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,+ECA/BC,E,6DCECC,EAAkBC,IAAOC,IAAV,oFAAGD,CAAH,oBAIfE,EAAgBF,IAAOC,IAAV,kFAAGD,CAAH,4FAQbG,EAASH,IAAOI,MAAV,2EAAGJ,CAAH,iZAMG,qBAAGK,MAAkBC,OAAOC,aAC5B,qBAAGF,MAAkBC,OAAOC,aAY1B,qBAAGF,MAAkBC,OAAOE,WAYvCC,EAAST,IAAOU,OAAV,2EAAGV,CAAH,0DACN,qBAAGW,KAAmB,QAAU,UAKhCC,EAAUZ,IAAOa,KAAV,4EAAGb,CAAH,mCCjDPc,EAAQd,IAAOe,MAAV,yEAAGf,CAAH,oBCILc,EAAmB,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAaC,EAAhB,mCAA2B,kBAAC,EAAYA,EAAOD,ICMlEb,EAAoB,SAAC,GAO3B,IAAD,IANJe,WAMI,MANE,EAMF,MALJC,WAKI,MALE,GAKF,MAJJC,aAII,MAJI,EAIJ,EAHJC,EAGI,EAHJA,MACAC,EAEI,EAFJA,gBACGL,EACC,iEACkBM,mBAAiBH,GADnC,mBACGI,EADH,KACQC,EADR,OAE4BF,oBAAkB,GAF9C,mBAEGG,EAFH,KAEcC,EAFd,KAIJC,qBAAU,WACHF,GAAaF,IAAQJ,GACT,OAAfE,QAAe,IAAfA,KAAkBE,KAEnB,CAACA,EAAKJ,EAAOM,EAAWJ,IAO3B,OACE,kBAAC,EAAD,KACGD,GAAS,kBAAC,EAAD,KAAQA,GAClB,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAYH,GACZ,kBAAC,EAAD,iBACMD,EADN,CAEEY,aAAYZ,EAAK,eAAiB,eAClCa,KAAK,QACLZ,IAAKA,EACLC,IAAKA,EACLC,MAAOI,EACPO,YAAa,kBAAMJ,GAAW,IAC9BK,UAAW,kBAAML,GAAW,IAC5BM,SAnBc,SAACC,GACrB,IAAMC,EAASC,OAAOF,EAAIG,cAAcjB,OACxCK,EAAOU,OAmBH,kBAAC,EAAD,CAAUxB,KAAMe,GAAYF,GAC5B,kBAAC,EAAD,KAAYL,MCjDPmB,EAAgBtC,IAAOC,IAAV,8EAAGD,CAAH,qEAIP,qBAAGK,MAAkBkC,MAAMC,QACjC,qBAAGnC,MAAkBC,OAAOmC,KAAK,gBAIjCC,EAAS1C,IAAO2C,OAAV,uEAAG3C,CAAH,gVA0BN4C,EAAS5C,IAAO6C,OAAV,uEAAG7C,CAAH,4EAEG,qBAAGK,MAAkBC,OAAOwC,MAAM,gBAK3CC,EAAQ/C,IAAOa,KAAV,sEAAGb,CAAH,gHChCL0C,EAAoB,SAAC,GAO3B,IANLM,EAMI,EANJA,aACAC,EAKI,EALJA,QACA5B,EAII,EAJJA,MACA6B,EAGI,EAHJA,YACA5B,EAEI,EAFJA,gBACGL,EACC,oFACkBM,mBAAiByB,GAAgB,IADnD,mBACGxB,EADH,KACQC,EADR,KAGJG,qBAAU,WACJJ,IAAQwB,IACK,OAAf1B,QAAe,IAAfA,KAAkBE,MAEnB,CAACA,EAAKwB,EAAc1B,IAOvB,OACE,kBAAC,EAAD,KACGD,GAAS,kBAAC,EAAD,KAAQA,GAClB,kBAAC,EAAD,iBAAcJ,EAAd,CAAoBgB,SARF,SAACC,GACrB,IAAMC,EAASD,EAAIG,cAAcjB,MACjCK,EAAOU,IAMwCa,aAAcxB,IACzD,kBAAC,EAAD,CAAU2B,IAAI,QAAQ/B,MAAM,IACzB8B,GAAe,2BAEjBD,EAAQG,KAAI,SAACP,EAAQQ,GAAT,OACX,kBAAC,EAAD,CAAUF,IAAKE,EAAOjC,MAAOyB,EAAOzB,OACjCyB,EAAO9B,WAId,kBAAC,EAAD,YC5COuC,EAAiB,SAACC,GAAD,OAAsBA,EAAMC,UAE7CC,EAAkB,SAACF,GAAD,MAAsB,CACnDA,EAAMC,SAASE,UACfH,EAAMC,SAASG,YAGJC,EAAwB,SAACL,GAAD,MAAsB,CACzDA,EAAMC,SAASK,cACfN,EAAMC,SAASM,gB,OCIJC,EAAgBC,YAAY,CACvCC,KAAM,WACNC,aAbkC,CAClCR,UAAW,GACXC,UAAW,GACXQ,MAAO,GACPC,OAAQ,GACRP,cAAe,EACfC,cAAe,GACfO,gBAAiB,EACjBC,YAAa,MAMbC,SAAU,CACRC,YAAa,SAACjB,EAAOkB,GACnBlB,EAAMY,MAAQM,EAAOC,SAEvBC,aAAc,SAACpB,EAAOkB,GACpBlB,EAAMa,OAASK,EAAOC,SAExBE,iBAAkB,SAACrB,EAAOkB,GACxBlB,EAAMc,gBAAkBI,EAAOC,SAEjCG,WAAY,SAACtB,EAAOkB,GAClBlB,EAAMe,YAAcG,EAAOC,SAE7BI,cAAe,SAACvB,GACdA,EAAMY,MAAQ,GACdZ,EAAMa,OAAS,GACfb,EAAMc,gBAAkB,EACxBd,EAAMe,YAAc,S,EAWtBP,EAAcgB,QALhBP,E,EAAAA,YACAG,E,EAAAA,aACAC,E,EAAAA,iBACAC,E,EAAAA,WACAC,E,EAAAA,cAGaf,IAAf,QC9CaiB,EAAa,SAACzB,GAAD,OAAsBA,EAAM0B,MAYzCC,EAAqB,SAAC3B,GAAD,MACE,YAAlCA,EAAM0B,KAAKE,cAAcF,MAA4D,YAAtC1B,EAAM0B,KAAKE,cAAcC,UAE7DC,EAAmB,SAAC9B,GAAD,OACP,OAAvBA,EAAM0B,KAAKK,SACe,OAA1B/B,EAAM0B,KAAKM,YACS,OAApBhC,EAAM0B,KAAKO,MACXjC,EAAM0B,KAAKQ,SAASC,OAAS,GACH,cAA1BnC,EAAM0B,KAAKU,YAEAC,EAAoB,SAACrC,GAAD,OAC/BA,EAAM0B,KAAKY,YAAwC,QAA1BtC,EAAM0B,KAAKU,YAAkD,SAA1BpC,EAAM0B,KAAKU,aAE5DG,EAAY,SAACvC,GAAD,OAAsBA,EAAM0B,KAAKY,Y,ST3B9C/F,K,mCAAAA,E,cAAAA,E,sBAAAA,E,2BAAAA,E,uBAAAA,E,gBAAAA,E,yBAAAA,M,KUEL,ICFKiG,EDECC,EAAqBhG,IAAOiG,QAAV,6FAAGjG,CAAH,8EAIR,qBAAGK,MAAkB6F,YAAYC,UAK3CC,EAAqBpG,IAAOC,IAAV,6FAAGD,CAAH,8FAEd,qBAAGK,MAAkBkC,MAAMlB,SAKzB,qBAAGhB,MAAkBkC,MAAMC,QEdjC6D,EAAe,kBAC1B,kBAAC,EAAD,KACE,iDACA,oDACA,sDACA,sDACA,uDACA,sEACA,wECESC,EAAc,WACzB,IAAMC,EAAWC,cACXC,EAAYC,YAAYjD,GACxBkD,EAAaD,YAAY9C,GAHA,EAIiB8C,YAAYpD,GAApDa,EAJuB,EAIvBA,MAAOG,EAJgB,EAIhBA,YAAaD,EAJG,EAIHA,gBACtBuC,EAAiBF,YAAYrB,GAOnC,OACE,kBAAC,EAAD,KACGuB,GAAkB,kBAAC,EAAD,OACjBA,GACA,oCACE,kBAAC,EAAD,CACE1F,IAAKuF,EAAU,GACftF,IAAKsF,EAAU,GACfrF,MAAO+C,EACP9C,MAAM,OACNC,gBAfS,SAACE,GAClB+E,EAAS/B,EAAYhD,IACrB+E,EAAS5B,EAAanD,OAehB,kBAAC,EAAD,CACEN,IAAKyF,EAAW,GAChBxF,IAAKwF,EAAW,GAChBvF,MAAOiD,EACPhD,MAAM,aACNC,gBAAiB,SAACE,GAAD,OAAS+E,EAAS3B,EAAiBpD,OAEtD,kBAAC,EAAD,CACEH,MAAM,gBACN2B,aAAesB,GAA0B,GACzCrB,QC5CH4D,OAAOC,OAAOhH,GAAMsD,KAAI,SAAC2D,GAAD,MAAW,CACxChG,MAAOgG,EACP3F,MAAO2F,MD2CCzF,gBAAiB,SAACE,GAAD,OAAS+E,EAAS1B,EAAWrD,U,mcFjD9CuE,K,cAAAA,E,cAAAA,E,YAAAA,E,aAAAA,M,KIML,IAAMiB,EAAOhH,IAAOC,IAAV,mEAAGD,CAAH,sNAGU,gBAAGiH,EAAH,EAAGA,KAAH,uBAAwBA,EAAM,GAA9B,2BAiBdC,EAAclH,IAAOC,IAAV,0EAAGD,CAAH,6GAKN,qBAAGK,MAAkBC,OAAOmC,KAAK,gBAE/C,qBAAG0E,MACGC,SAASrB,EAAUsB,QACzBC,YADA,QAKA,qBAAGH,MACGC,SAASrB,EAAUwB,OACzBD,YADA,QAKA,qBAAGH,MACGC,SAASrB,EAAUyB,QACzBF,YADA,QAKA,qBAAGH,MACGC,SAASrB,EAAU0B,OACzBH,YADA,QAMSI,GAAO1H,IAAOC,IAAV,mEAAGD,CAAH,kJ,SC/BV,SAAS2H,GAAaC,EAAYvE,EAAe4D,GACtD,IAAIY,EAA0B,GAC1BD,EAAKR,SAAS,UAChBS,EAAWC,KAAK/B,EAAUsB,OAGxBO,EAAKR,SAAS,SAChBS,EAAWC,KAAK/B,EAAUwB,MAG5B,IAAMQ,EAlCD,SAAoB1E,EAAe4D,GACxC,IAAM9C,EAAQ8C,EAAK,GACb7C,EAAS6C,EAAK,GACdY,EAAa,GAkBnB,OAhBIxE,EAAQc,GACV0D,EAAWC,KAAK/B,EAAUsB,OAGxBhE,GAASc,GAASC,EAAS,IAC7ByD,EAAWC,KAAK/B,EAAUyB,OAGxBnE,EAAQc,IAAU,GACpB0D,EAAWC,KAAK/B,EAAUwB,MAGxBlE,EAAQc,IAAUA,EAAQ,GAC5B0D,EAAWC,KAAK/B,EAAU0B,MAGrBI,EAAWnC,OAAS,EAAImC,EAAa,KAa5BG,CAAW3E,EAAO4D,GAMlC,OAJIc,IACFF,EAAU,uBAAOA,GAAP,aAAsBE,KAG3BF,ECnCF,IAAMI,GAAsB,SAAC,GAAD,IAAGd,EAAH,EAAGA,MAAOnG,EAAV,EAAUA,SAAV,OACjC,kBAAC,EAAD,CAAemG,MAAOA,GACpB,kBAAC,GAAD,KAASnG,K,kHCRN,IAAMkH,GAAclI,IAAOmI,IAAV,MCIXC,GAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAQpH,EAAX,8BAC9B,kBAAC,GAAD,iBAAmBA,EAAnB,CAAyBoH,IAAKA,GAAO,Y,4DCG1BC,GAAkB,SAAC,GAC9B,OAD2C,EAAXxG,MAE9B,IAAK,OACH,OAAO,kBAAC,GAAD,CAAOyG,IAAKxB,OACrB,IAAK,UACH,OAAO,kBAAC,GAAD,CAAOwB,IAAKC,OACrB,IAAK,OACH,OAAO,kBAAC,GAAD,CAAOD,IAAK/C,OACrB,QACE,OAAO,OCHAwB,GAAkB,SAAC,GAMzB,IALLY,EAKI,EALJA,KAKI,IAJJX,YAII,MAJG,CAAC,GAAI,IAIR,EAHJwB,EAGI,EAHJA,YACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,mBAEA,OACE,kBAAC,EAAD,CAAQ1B,KAAMA,GACXW,EAAKxE,KAAI,SAACwF,EAAMvF,GAAP,OACR,kBAAC,GAAD,CAAUF,IAAKE,EAAO8D,MAAO0B,GAAqBD,EAAMvF,EAAO4D,IAC5DwB,IAAgBpF,GAAS,kBAAC,GAAD,CAAMvB,KAAK,SACpC4G,IAAoBrF,GAAS,kBAAC,GAAD,CAAMvB,KAAK,SACxC6G,IAAuBtF,GAAS,kBAAC,GAAD,CAAMvB,KAAK,kB,qCCzB/C,SAAegH,GAAtB,qC,gDAAO,WAA0BC,EAAaC,GAAvC,oBAAAC,EAAA,6DACCC,EADD,OACSF,QADT,IACSA,OADT,EACSA,EAAaE,MAErBC,EAA4B,CAChCC,QAAmB,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAaI,SAAU,MAC/BC,QAAQ,cACN,eAAgB,mBAChBC,OAAQ,oBAFH,OAGFN,QAHE,IAGFA,OAHE,EAGFA,EAAaK,SAElB7G,KAAM0G,EAAQK,KAAKC,UAAUN,GAAlB,OAA2BF,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAaxG,MAVhD,SAYkBiH,MAAMV,EAAKI,GAZ7B,cAYCO,EAZD,yBAaEA,EAASC,QAbX,4C,sBCCP,IAAMC,GAAW,2DAEV,SAASC,GAAT,GAKuC,IAJ5C1F,EAI2C,EAJ3CA,MACAC,EAG2C,EAH3CA,OACA0F,EAE2C,EAF3CA,WACA/C,EAC2C,EAD3CA,KAEA,OAAO+B,GAAQc,GAAU,CACvBR,OAAQ,OACRF,MAAO,CACL,aAAc/E,EACd,cAAeC,EACf,mBAAoB2C,EACpB+C,gBAKC,SAASC,GAASC,GACvB,OAAOlB,GAAQ,GAAD,OAAIc,GAAJ,YAAgBI,IAGzB,SAASC,GAASD,EAAYE,GACnC,OAAOpB,GAAQ,GAAD,OAAIc,GAAJ,YAAgBI,GAAM,CAClCZ,OAAQ,OACRF,MAAO,CACLgB,eClBC,ICGMC,GAAYnG,YAAY,CACnCC,KAAM,OACNC,aAZ8B,CAC9BkG,OAAQ,KACR3E,SAAU,GACVE,WAAY,YACZL,QAAS,KACTC,WAAY,KACZC,KAAM,KACNL,cAAe,CAAEF,KAAM,SAAUG,SAAU,WAM3Cb,SAAU,CACR8F,UAAW,SAAC9G,EAAOkB,GACjBlB,EAAM6G,OAAS3F,EAAOC,SAExB4F,aAAc,SAAC/G,EAAOkB,GAAyC,IAAD,EAOxDA,EAAOC,QALTkD,EAF0D,EAE1DA,KACOtC,EAHmD,cAG1DyB,KAH0D,MAIhDxB,EAJgD,cAI1DiD,QAJ0D,MAK5ChD,EAL4C,cAK1D,aAL0D,MAMnC+E,EANmC,EAM1D,cAAgBhH,MAElBA,EAAMkC,SAAWmC,EACjBrE,EAAM+B,QAAUA,EAChB/B,EAAMgC,WAAaA,EACnBhC,EAAMiC,KAAOA,EACbjC,EAAMoC,WAAa4E,EAAUC,eAE/BC,cAAe,SAAClH,EAAOkB,GACrBlB,EAAM4B,cAAcV,EAAOC,SAAW,WAExCgG,eAAgB,SAACnH,EAAOkB,GACtBlB,EAAM4B,cAAcV,EAAOC,SAAW,UAExCiG,cAAe,SAACpH,EAAOkB,GACrBlB,EAAM4B,cAAcV,EAAOC,SAAW,SAExCkG,cAAe,SAACrH,EAAOkB,GACrBlB,EAAMoC,WAAalB,EAAOC,QAAQnB,MACL,QAAzBkB,EAAOC,QAAQnB,OAA4C,SAAzBkB,EAAOC,QAAQnB,QACnDA,EAAMsC,UAAYpB,EAAOC,QAAQ,gBAGrCmG,WAAY,SAACtH,EAAOkB,GAAyC,IAAD,EAItDA,EAAOC,QAFFY,EAFiD,cAExDyB,KAFwD,MAG9CxB,EAH8C,cAGxDiD,QAHwD,MAK1DjF,EAAM+B,QAAUA,EAChB/B,EAAMgC,WAAaA,GAErBuF,UAAW,SAACvH,GACVA,EAAM6G,OAAS,KACf7G,EAAMkC,SAAW,GACjBlC,EAAMoC,WAAa,YACnBpC,EAAM+B,QAAU,KAChB/B,EAAMgC,WAAa,KACnBhC,EAAMiC,KAAO,KACbjC,EAAM4B,cAAgB,CAAEF,KAAM,SAAUG,SAAU,UAClD7B,EAAMsC,eAAYkF,M,GAcpBZ,GAAUpF,QARZsF,G,GAAAA,UACAC,G,GAAAA,aACAG,G,GAAAA,cACAE,G,GAAAA,cACAD,G,GAAAA,eACAE,G,GAAAA,cACAC,G,GAAAA,WACAC,G,GAAAA,UAGaE,GDvEa,SAAClC,GAAD,gDAAwC,WAAOvC,EAAU0E,GAAjB,kBAAAhC,EAAA,yDAE5B,YADxBgC,IACJhG,KAAKE,cAAcF,KAFqC,iEAOhEsB,EAASkE,GAAc,SAPyC,SAQ5CZ,GAAUf,GARkC,cAQ1DoC,EAR0D,OAShE3E,EAAS8D,GAAUa,EAAMC,UATuC,UAW7CpB,GAASmB,EAAMC,SAX8B,QAW1DlG,EAX0D,OAYhEsB,EAAS+D,GAAarF,IAZ0C,kDAchEsB,EAASoE,GAAc,SAdyC,yBAgBhEpE,EAASmE,GAAe,SAhBwC,6EAAxC,yDCuECU,GDnDA,SAAClB,GAAD,gDAAoC,WAAO3D,EAAU0E,GAAjB,sBAAAhC,EAAA,yDACzD1F,EAAQ0H,IACRjB,EAAKzG,EAAM0B,KAAKmF,OACoB,YAAtC7G,EAAM0B,KAAKE,cAAcC,UAA2B4E,EAHO,iEAQ7DzD,EAASkE,GAAc,aARsC,SASvCR,GAASD,EAAIE,GAT0B,UASvDmB,EATuD,OAW7D9E,EAASqE,GAAcS,IAED,WAAlBA,EAAQ9H,MAbiD,kCAcxCwG,GAASC,GAd+B,QAcrD/E,EAdqD,OAe3DsB,EAASsE,GAAW5F,IAfuC,0DAkB7DsB,EAASoE,GAAc,aAlBsC,yBAoB7DpE,EAASmE,GAAe,aApBqC,6EAApC,yDCqDdP,MAAf,Q,wBCrFamB,GAActL,IAAOiG,QAAV,0EAAGjG,CAAH,qBCiBXuL,GAAW,WACtB,IAAMhF,EAAWC,cADW,EAEFE,YAAYpD,GAA9Ba,EAFoB,EAEpBA,MAAOC,EAFa,EAEbA,OAFa,EAGoBsC,YAAY1B,GAApDS,EAHoB,EAGpBA,SAAUD,EAHU,EAGVA,KAAMF,EAHI,EAGJA,QAASC,EAHL,EAGKA,WAC3BiG,EAAa9E,YAAYrB,GACzBoG,EAAc/E,YAAYd,GAC1B8F,EAAahF,YAAYxB,GACzByG,EAAajF,YAAYZ,GAE/BlE,qBAAU,WACR,IAAMgK,EAAkB,SAAC1J,GAIvB,GAHAA,EAAI2J,iBACJ3J,EAAI4J,mBAEAJ,EAAJ,CAJ8C,IASxCxB,ECpCL,SAA2B/G,GAChC,MAAY,YAARA,EACK4C,EAAUsB,MAGP,cAARlE,EACK4C,EAAUyB,MAGP,cAARrE,EACK4C,EAAUwB,KAGP,eAARpE,EACK4C,EAAU0B,KAGZ,KDmBeoB,CADF3G,EAARiB,KAGJ+G,GACF3D,EAAS6E,GAAclB,MAO3B,OAHIsB,GACFO,SAASC,iBAAiB,UAAWJ,GAEhC,kBAAMG,SAASE,oBAAoB,UAAWL,MACpD,CAACF,EAAYF,EAAYjF,IAE5B,IAAI2F,EAAmB,KAOvB,OANKV,EAEMC,IACTS,EAAQ,kBAAC,GAAD,CAAO3D,IAAG,UEvDM,yCFuDN,OAAoBoD,MAFtCO,EAAQ,kBAAC,GAAD,CAAO3D,IAAK4D,OAMpB,kBAAC,GAAD,KACGD,EACAV,IAAeC,GACd,kBAAC,GAAD,CACExE,KAAM,CAAC9C,EAAOC,GACdwD,KAAMnC,EACNkD,mBAAoBpD,EACpBmD,gBAAiBpD,EACjBmD,YAAajD,MG/DV4G,GAAepM,IAAOqM,OAAV,iFAAGrM,CAAH,kiBAIR,qBAAGK,MAAkBkC,MAAMC,QCA/B8J,GAASC,IAAMC,YAC1B,WAA4DC,GAAS,IAAlEC,EAAiE,EAAjEA,UAAW5K,EAAsD,EAAtDA,KAAM6K,EAAgD,EAAhDA,QAAS3L,EAAuC,EAAvCA,SAAU4L,EAA6B,EAA7BA,SAAa3L,EAAgB,oEAClE,OACE,kBAAC,GAAD,iBACMA,EADN,CAEEa,KAAMA,GAAQ,SACd2K,IAAKA,EACL5K,aAAY6K,GAAa,iBACzBC,QAASA,EACTC,SAAUA,IAET5L,MCjBI6L,GAAiB7M,IAAOiG,QAAV,+EAAGjG,CAAH,2EAIJ,qBAAGK,MAAkB6F,YAAYC,UCK3C2G,GAAc,WAAO,IAAD,EACyBpG,YAAYpD,GAA5Da,EADuB,EACvBA,MAAOC,EADgB,EAChBA,OAAQC,EADQ,EACRA,gBAAiBC,EADT,EACSA,YAClCkH,EAAa9E,YAAYrB,GACzBkB,EAAWC,cAYjB,OACE,kBAAC,GAAD,KACGgF,GAAc,kBAACc,GAAD,CAAQK,QAPb,WACZpG,EAASuE,MACTvE,EAASzB,OAKQ,eACb0G,GACA,kBAACc,GAAD,CAAQK,QAdI,kBAChBrI,EACIiC,EAASyE,GAAa,CAAE7G,QAAOC,SAAQ0F,WAAYzF,EAAiB0C,KAAMzC,UAC1EyG,GAW4B6B,UAAWtI,GAAvC,gBC5BKyI,GAAa/M,IAAOgN,KAAV,4EAAGhN,CAAH,imBACD,qBAAGK,MAAkBC,OAAOwC,MAAM,gBAoBjC,qBAAGzC,MAAkB6F,YAAYC,UASjC,qBAAG9F,MAAkB6F,YAAY+G,UCfzCC,GAVH,WACV,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,QCDSC,GAVA,SAACC,GAAD,OAAgB,SAACC,GAAD,OAAe,SAAC5I,GAC7C6I,QAAQC,MAAM9I,EAAO3C,MACrBwL,QAAQE,KAAK,cAAe/I,GAC5B,IAAMgJ,EAASJ,EAAK5I,GAGpB,OAFA6I,QAAQI,IAAI,aAAcN,EAAMnC,YAChCqC,QAAQK,WACDF,KCKIG,GAAe5J,YAAY,CACtCC,KAAM,UACNC,aANiC,CACjC9C,MAAO,GAMPmD,SAAU,CACRsJ,UAAW,SAACtK,GAKVA,EAAMnC,OAAS,GAEjB0M,UAAW,SAACvK,GACVA,EAAMnC,OAAS,GAGjB2M,kBAAmB,SAACxK,EAAOkB,GACzBlB,EAAMnC,OAASqD,EAAOC,Y,GAK+BkJ,GAAa7I,QAIzD6I,I,GAJAC,U,GAAWC,U,GAAWC,kBAItBH,GAAf,SC9BaR,GAAQY,YAAe,CAClCC,QAAS,CACPC,QAASC,GACT3K,SAAU4K,EACVnJ,KAAMoJ,IAERC,WAAW,CAAEC,IAAH,oBAAwBC,kBCDhBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCjB5B,I,mdCIA,IAAMC,GAAcC,YAAH,MAGH,qBAAG1O,MAAkBkC,MAAMC,OAGlBwM,MCA9BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAe9O,MFZE,CACnBC,OAAQ,CACNE,QAAS,UACTD,UAAW,UACXkC,KAAM,CACJ,YAAa,WAEfK,MAAO,CACL,YAAa,YAGjBP,MAAO,CACLlB,MAAO,yBACPmB,KAAM,iBAER0D,YAAa,CACXC,OAAQ,QACR8G,OAAQ,WEJN,kBAAC6B,GAAD,MACA,kBAAC,IAAD,CAAU1B,MAAOA,IACf,kBAAC,GAAD,SAINrB,SAASqD,eAAe,SHiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.a4461df4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pony.b321278a.png\";","module.exports = __webpack_public_path__ + \"static/media/domokun.a3285734.png\";","module.exports = __webpack_public_path__ + \"static/media/exit.a2390211.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.c0a12c3f.png\";","module.exports = __webpack_public_path__ + \"static/media/dot-background.3a79f8be.png\";","export enum Pony {\n  twilightSparkle = 'Twilight Sparkle',\n  spike = 'Spike',\n  applejack = 'Applejack',\n  rainbowDash = 'Rainbow Dash',\n  pinkiePie = 'Pinkie Pie',\n  rarity = 'Rarity',\n  fluttershy = 'Fluttershy',\n}\n","import styled from 'styled-components/macro'\n\nexport const SliderContainer = styled.div`\n  display: block;\n`\n\nexport const SliderWrapper = styled.div`\n  margin: 5px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`\n\nexport const Slider = styled.input`\n  flex: 1;\n  -webkit-appearance: none;\n  width: 100%;\n  height: 10px;\n  margin: 0 5px;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  border-radius: 10px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    filter: brightness(90%);\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 20px;\n    height: 20px;\n    background-color: ${({ theme }) => theme.colors.primary};\n    border-radius: 30px;\n    box-shadow: 0px 0px 3px darkgreen;\n    transition: all 0.5s ease;\n\n    &:hover,\n    &:active {\n      transform: scale(1.05);\n    }\n  }\n`\n\nexport const Output = styled.output<{ show: boolean }>`\n  display: ${({ show }) => (show ? 'block' : 'none')};\n  position: absolute;\n  left: calc(50% - 10px);\n`\n\nexport const Display = styled.span`\n  width: 20px;\n  text-align: center;\n`\n","import styled from 'styled-components/macro'\n\nexport const Label = styled.label`\n  display: block;\n`\n","import React, { FC, LabelHTMLAttributes } from 'react'\n\nimport * as s from './label.styles'\n\ntype Props = LabelHTMLAttributes<HTMLLabelElement>\n\nexport const Label: FC<Props> = ({ children, ...rest }) => <s.Label {...rest}>{children}</s.Label>\n","import React, { FC, useState, InputHTMLAttributes, ChangeEvent, useEffect } from 'react'\n\nimport * as s from './slider.styles'\nimport { Label } from 'components/label'\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  value?: number\n  onChangeHandler?: (val: number) => void\n  max?: number\n  min?: number\n}\n\nexport const Slider: FC<Props> = ({\n  min = 0,\n  max = 10,\n  value = 0,\n  title,\n  onChangeHandler,\n  ...rest\n}) => {\n  const [val, setVal] = useState<number>(value)\n  const [isPressed, setPressed] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (!isPressed && val !== value) {\n      onChangeHandler?.(val)\n    }\n  }, [val, value, isPressed, onChangeHandler])\n\n  const changeHandler = (evt: ChangeEvent<HTMLInputElement>) => {\n    const evtVal = Number(evt.currentTarget.value)\n    setVal(evtVal)\n  }\n\n  return (\n    <s.SliderContainer>\n      {title && <Label>{title}</Label>}\n      <s.SliderWrapper>\n        <s.Display>{min}</s.Display>\n        <s.Slider\n          {...rest}\n          aria-label={rest['aria-label'] || 'range slider'}\n          type=\"range\"\n          min={min}\n          max={max}\n          value={val}\n          onMouseDown={() => setPressed(true)}\n          onMouseUp={() => setPressed(false)}\n          onChange={changeHandler}\n        />\n        <s.Output show={isPressed}>{val}</s.Output>\n        <s.Display>{max}</s.Display>\n      </s.SliderWrapper>\n    </s.SliderContainer>\n  )\n}\n","import styled from 'styled-components/macro'\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n  display: block;\n  > * {\n    font-family: ${({ theme }) => theme.fonts.body};\n    color: ${({ theme }) => theme.colors.dark['shade-100']};\n  }\n`\n\nexport const Select = styled.select`\n  cursor: pointer;\n  appearance: none;\n  width: 100%;\n  max-width: 100%;\n  padding: 4px 8px;\n  margin: 5px 0;\n  border: none;\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.1);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.3;\n  filter: opacity(90%);\n  transition: all 0.2s ease-in;\n\n  &::-ms-expand {\n    display: none;\n  }\n\n  &:hover {\n    transition: all 0.2s ease-in;\n    filter: opacity(100%);\n  }\n`\n\nexport const Option = styled.option`\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.light['shade-100']};\n  font-size: 12px;\n  font-weight: normal;\n`\n\nexport const Arrow = styled.span`\n  cursor: pointer;\n  position: absolute;\n  font-size: 16px;\n  right: 10px;\n  bottom: 8px;\n  transform: rotate(90deg) scaleY(1.5);\n`\n","import React, { FC, useState, useEffect } from 'react'\n\nimport * as s from './select.styles'\nimport { SelectOption } from './utils/types'\nimport { Label } from 'components/label'\n\ninterface Props extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  defaultValue?: string\n  options: SelectOption<string>[]\n  onChangeHandler?: (val: string) => void\n}\n\nexport const Select: FC<Props> = ({\n  defaultValue,\n  options,\n  title,\n  placeholder,\n  onChangeHandler,\n  ...rest\n}) => {\n  const [val, setVal] = useState<string>(defaultValue || '')\n\n  useEffect(() => {\n    if (val !== defaultValue) {\n      onChangeHandler?.(val)\n    }\n  }, [val, defaultValue, onChangeHandler])\n\n  const changeHandler = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n    const evtVal = evt.currentTarget.value\n    setVal(evtVal)\n  }\n\n  return (\n    <s.SelectWrapper>\n      {title && <Label>{title}</Label>}\n      <s.Select {...rest} onChange={changeHandler} defaultValue={val}>\n        <s.Option key=\"empty\" value=\"\">\n          {placeholder || 'Please choose an option'}\n        </s.Option>\n        {options.map((option, index) => (\n          <s.Option key={index} value={option.value}>\n            {option.label}\n          </s.Option>\n        ))}\n      </s.Select>\n      <s.Arrow>&gt;</s.Arrow>\n    </s.SelectWrapper>\n  )\n}\n","import { RootState } from '../store'\n\nexport const selectSettings = (state: RootState) => state.settings\n\nexport const selectSizeRange = (state: RootState) => [\n  state.settings.minLength,\n  state.settings.maxLength,\n]\n\nexport const selectDifficultyRange = (state: RootState) => [\n  state.settings.minDifficulty,\n  state.settings.maxDifficulty,\n]\n\nexport const selectWidth = (state: RootState) => state.settings.width\n\nexport const selectHeight = (state: RootState) => state.settings.height\n\nexport const selectDifficulty = (state: RootState) => state.settings.difficultyLevel\n\nexport const selectPony = (state: RootState) => state.settings.currentPony\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { SettingsState } from './types'\nimport { Pony } from 'types/pony'\n\nconst initialState: SettingsState = {\n  minLength: 15, // these can also be get from the API\n  maxLength: 25,\n  width: 15,\n  height: 15,\n  minDifficulty: 0,\n  maxDifficulty: 10,\n  difficultyLevel: 0,\n  currentPony: null,\n}\n\nexport const SettingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    changeWidth: (state, action: PayloadAction<number>) => {\n      state.width = action.payload\n    },\n    changeHeight: (state, action: PayloadAction<number>) => {\n      state.height = action.payload\n    },\n    changeDifficulty: (state, action: PayloadAction<number>) => {\n      state.difficultyLevel = action.payload\n    },\n    changePony: (state, action: PayloadAction<Pony>) => {\n      state.currentPony = action.payload\n    },\n    resetSettings: (state) => {\n      state.width = 15\n      state.height = 15\n      state.difficultyLevel = 0\n      state.currentPony = null\n    },\n  },\n})\n\nexport const {\n  changeWidth,\n  changeHeight,\n  changeDifficulty,\n  changePony,\n  resetSettings,\n} = SettingsSlice.actions\n\nexport default SettingsSlice.reducer\n","import { RootState } from '../store'\n\nexport const selectGame = (state: RootState) => state.game\n\nexport const selectMaze = (state: RootState) => state.game.mazeData\n\nexport const selectGameStatus = (state: RootState) => state.game.gameStatus\n\nexport const selectPonyPos = (state: RootState) => state.game.ponyPos\n\nexport const selectDomokunPos = (state: RootState) => state.game.domokunPos\n\nexport const selectExit = (state: RootState) => state.game.exit\n\nexport const selectFetchPending = (state: RootState) =>\n  state.game.fetchingState.game === 'pending' || state.game.fetchingState.movement === 'pending'\n\nexport const selectHasStarted = (state: RootState) =>\n  state.game.ponyPos !== null &&\n  state.game.domokunPos !== null &&\n  state.game.exit !== null &&\n  state.game.mazeData.length > 0 &&\n  state.game.gameStatus !== 'preparing'\n\nexport const selectHasFinished = (state: RootState) =>\n  state.game.hiddenUrl && (state.game.gameStatus === 'won' || state.game.gameStatus === 'over')\n\nexport const selectUrl = (state: RootState) => state.game.hiddenUrl\n","import styled from 'styled-components/macro'\n\nexport const GameSettingWrapper = styled.section`\n  grid-area: setting;\n  padding: 1vh 0;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    overflow-y: auto;\n  }\n`\n\nexport const InstructionWrapper = styled.div`\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.title};\n  font-size: 16px;\n  overflow-y: auto;\n\n  & > p {\n    font-family: ${({ theme }) => theme.fonts.body};\n  }\n`\n","export enum Direction {\r\n  north = 'north',\r\n  south = 'south',\r\n  west = 'west',\r\n  east = 'east',\r\n}\r\n","import React from 'react'\n\nimport * as s from '../game-setting.styles'\n\nexport const Instructions = () => (\n  <s.InstructionWrapper>\n    <h1>Game Instructions</h1>\n    <p>Use &uarr; to move up</p>\n    <p>Use &darr; to move down</p>\n    <p>Use &larr; to move left</p>\n    <p>Use &rarr; to move right</p>\n    <p>Win the game by moving pony to the exit</p>\n    <p>Don&lsquo;t let Domokun catch your pony!</p>\n  </s.InstructionWrapper>\n)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Slider } from 'components/slider'\nimport { Select } from 'components/select'\nimport { selectSizeRange, selectDifficultyRange, selectSettings } from 'stores/settings/selectors'\nimport { changeWidth, changeHeight, changeDifficulty, changePony } from 'stores/settings/slice'\nimport { selectHasStarted } from 'stores/game/selectors'\nimport { Pony } from 'types/pony'\n\nimport { getSelectOptionsForPony } from './utils/helpers'\nimport * as s from './game-setting.styles'\nimport { Instructions } from './components/instructions'\n\nexport const GameSetting = () => {\n  const dispatch = useDispatch()\n  const sizeRange = useSelector(selectSizeRange)\n  const levelRange = useSelector(selectDifficultyRange)\n  const { width, currentPony, difficultyLevel } = useSelector(selectSettings)\n  const hasGameStarted = useSelector(selectHasStarted)\n\n  const changeSize = (val: number) => {\n    dispatch(changeWidth(val))\n    dispatch(changeHeight(val))\n  }\n\n  return (\n    <s.GameSettingWrapper>\n      {hasGameStarted && <Instructions />}\n      {!hasGameStarted && (\n        <>\n          <Slider\n            min={sizeRange[0]}\n            max={sizeRange[1]}\n            value={width}\n            title=\"Size\"\n            onChangeHandler={changeSize}\n          />\n          <Slider\n            min={levelRange[0]}\n            max={levelRange[1]}\n            value={difficultyLevel}\n            title=\"Difficulty\"\n            onChangeHandler={(val) => dispatch(changeDifficulty(val))}\n          />\n          <Select\n            title=\"Choose a pony\"\n            defaultValue={(currentPony as string) || ''}\n            options={getSelectOptionsForPony()}\n            onChangeHandler={(val) => dispatch(changePony(val as Pony))}\n          />\n        </>\n      )}\n    </s.GameSettingWrapper>\n  )\n}\n","import { SelectOption } from 'components/select/utils/types'\nimport { Pony } from 'types/pony'\n\nexport function getSelectOptionsForPony(): SelectOption<Pony>[] {\n  return Object.values(Pony).map((pony) => ({\n    label: pony,\n    value: pony,\n  }))\n}\n","import styled, { css } from 'styled-components/macro'\n\nimport { Props } from '.'\nimport { Props as CellProps } from './components/maze-cell'\nimport { Direction } from 'types/directions'\n\nexport const Maze = styled.div<Pick<Props, 'size'>>`\n  max-width: 80vh;\n  display: grid;\n  grid-template-columns: ${({ size }) => `repeat(${size![0]}, minmax(10px, 1fr))`};\n  grid-auto-rows: 1fr;\n\n  &::before {\n    content: '';\n    width: 0;\n    padding-bottom: 100%;\n    grid-row: 1 / 1;\n    grid-column: 1 / 1;\n  }\n\n  & > *:first-child {\n    grid-row: 1 / 1;\n    grid-column: 1 / 1;\n  }\n`\n\nexport const CellWrapper = styled.div<CellProps>`\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n  margin: -0.15vh;\n  border-color: ${({ theme }) => theme.colors.dark['shade-100']};\n\n  ${({ walls }) =>\n    walls.includes(Direction.north) &&\n    css`\n      border-top: 0.4vh solid;\n    `}\n\n  ${({ walls }) =>\n    walls.includes(Direction.west) &&\n    css`\n      border-left: 0.4vh solid;\n    `}\n\n  ${({ walls }) =>\n    walls.includes(Direction.south) &&\n    css`\n      border-bottom: 0.4vh solid;\n    `}\n\n  ${({ walls }) =>\n    walls.includes(Direction.east) &&\n    css`\n      border-right: 0.4vh solid;\n    `}\n`\n\nexport const Cell = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  padding: 0.4vh;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n","import { MazeSize, Cell } from 'types/maze'\nimport { Direction } from 'types/directions'\n\nexport function isMazeWall(index: number, size: MazeSize): Direction[] | null {\n  const width = size[0]\n  const height = size[1]\n  const directions = []\n\n  if (index < width) {\n    directions.push(Direction.north)\n  }\n\n  if (index >= width * (height - 1)) {\n    directions.push(Direction.south)\n  }\n\n  if (index % width === 0) {\n    directions.push(Direction.west)\n  }\n\n  if (index % width === width - 1) {\n    directions.push(Direction.east)\n  }\n\n  return directions.length > 0 ? directions : null\n}\n\nexport function getCellWalls(data: Cell, index: number, size: MazeSize): Direction[] {\n  let directions: Direction[] = []\n  if (data.includes('north')) {\n    directions.push(Direction.north)\n  }\n\n  if (data.includes('west')) {\n    directions.push(Direction.west)\n  }\n\n  const isWalls = isMazeWall(index, size)\n\n  if (isWalls) {\n    directions = [...directions, ...isWalls]\n  }\n\n  return directions\n}\n","import React, { FC } from 'react'\nimport { Direction } from 'types/directions'\nimport * as s from '../maze.styles'\n\nexport interface Props {\n  walls: Direction[]\n}\n\nexport const MazeCell: FC<Props> = ({ walls, children }) => (\n  <s.CellWrapper walls={walls}>\n    <s.Cell>{children}</s.Cell>\n  </s.CellWrapper>\n)\n","import styled from 'styled-components'\n\nexport const StyledImage = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`\n","import React, { FC } from 'react'\n\nimport * as s from './image.styles'\n\nexport type Props = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport const Image: FC<Props> = ({ alt, ...rest }) => (\n  <s.StyledImage {...rest} alt={alt || 'image'} />\n)\n","import React, { FC } from 'react'\nimport { Image } from 'components/image'\nimport pony from 'assets/img/pony.png'\nimport domokun from 'assets/img/domokun.png'\nimport exit from 'assets/img/exit.png'\n\ninterface Props {\n  type: 'pony' | 'exit' | 'domokun'\n}\n\nexport const Pawn: FC<Props> = ({ type }) => {\n  switch (type) {\n    case 'pony':\n      return <Image src={pony} />\n    case 'domokun':\n      return <Image src={domokun} />\n    case 'exit':\n      return <Image src={exit} />\n    default:\n      return null\n  }\n}\n","import React, { FC } from 'react'\nimport { MazeSize, Maze as MazeData } from 'types/maze'\n\nimport * as s from './maze.styles'\nimport * as helpers from './utils/helpers'\nimport { MazeCell } from './components/maze-cell'\nimport { Pawn } from './components/pawn'\n\nexport interface Props {\n  data: MazeData\n  size?: MazeSize\n  endPointPos: number\n  ponyStartingPos: number\n  domokunStartingPos: number\n}\n\nexport const Maze: FC<Props> = ({\n  data,\n  size = [15, 15],\n  endPointPos,\n  ponyStartingPos,\n  domokunStartingPos,\n}) => {\n  return (\n    <s.Maze size={size}>\n      {data.map((cell, index) => (\n        <MazeCell key={index} walls={helpers.getCellWalls(cell, index, size)}>\n          {endPointPos === index && <Pawn type=\"exit\" />}\n          {ponyStartingPos === index && <Pawn type=\"pony\" />}\n          {domokunStartingPos === index && <Pawn type=\"domokun\" />}\n        </MazeCell>\n      ))}\n    </s.Maze>\n  )\n}\n","type Request = RequestInit & {\n  query?: Record<string, number | File | string | undefined>\n}\n\nexport async function request<T>(url: string, requestBody?: Request): Promise<T> {\n  const query = requestBody?.query\n\n  const basicRequest: RequestInit = {\n    method: requestBody?.method || 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      ...requestBody?.headers,\n    },\n    body: query ? JSON.stringify(query) : requestBody?.body,\n  }\n  const response = await fetch(url, basicRequest)\n  return response.json()\n}\n","import { MazeResponse, GameState } from 'types/maze'\nimport { request } from 'utils/request'\nimport { GameRequestBody, GameIdResponse } from './types'\nimport { Direction } from 'types/directions'\n\nconst BASE_URL = 'https://ponychallenge.trustpilot.com/pony-challenge/maze'\n\nexport function getGameId({\n  width,\n  height,\n  difficulty,\n  pony,\n}: GameRequestBody): Promise<GameIdResponse> {\n  return request(BASE_URL, {\n    method: 'POST',\n    query: {\n      'maze-width': width,\n      'maze-height': height,\n      'maze-player-name': pony,\n      difficulty,\n    },\n  })\n}\n\nexport function loadGame(id: string): Promise<MazeResponse> {\n  return request(`${BASE_URL}/${id}`)\n}\n\nexport function movePony(id: string, direction: Direction): Promise<GameState> {\n  return request(`${BASE_URL}/${id}`, {\n    method: 'POST',\n    query: {\n      direction,\n    },\n  })\n}\n","import { AppThunk } from '../store'\nimport {\n  initiateGame,\n  setGameId,\n  startFetching,\n  errorFetching,\n  finishFetching,\n  setGameStatus,\n  updateGame,\n} from './slice'\nimport { getGameId, loadGame, movePony } from './api'\nimport { GameRequestBody } from './types'\nimport { Direction } from 'types/directions'\n\nexport const getGameThunk = (request: GameRequestBody): AppThunk => async (dispatch, getState) => {\n  const state = getState()\n  if (state.game.fetchingState.game === 'pending') {\n    return\n  }\n\n  try {\n    dispatch(startFetching('game'))\n    const idRes = await getGameId(request)\n    dispatch(setGameId(idRes.maze_id))\n\n    const game = await loadGame(idRes.maze_id)\n    dispatch(initiateGame(game))\n  } catch (e) {\n    dispatch(errorFetching('game'))\n  } finally {\n    dispatch(finishFetching('game'))\n  }\n}\n\nexport const movePonyThunk = (direction: Direction): AppThunk => async (dispatch, getState) => {\n  const state = getState()\n  const id = state.game.gameId\n  if (state.game.fetchingState.movement === 'pending' || !id) {\n    return\n  }\n\n  try {\n    dispatch(startFetching('movement'))\n    const moveRes = await movePony(id, direction)\n\n    dispatch(setGameStatus(moveRes))\n\n    if (moveRes.state === 'active') {\n      const game = await loadGame(id)\n      dispatch(updateGame(game))\n    }\n  } catch (e) {\n    dispatch(errorFetching('movement'))\n  } finally {\n    dispatch(finishFetching('movement'))\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { MazeResponse, GameState as State } from 'types/maze'\nimport { GameState, FetchingKey } from './types'\n\nimport * as thunks from './thunks'\n\nconst initialState: GameState = {\n  gameId: null,\n  mazeData: [],\n  gameStatus: 'preparing',\n  ponyPos: null,\n  domokunPos: null,\n  exit: null,\n  fetchingState: { game: 'finish', movement: 'finish' },\n}\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setGameId: (state, action: PayloadAction<string>) => {\n      state.gameId = action.payload\n    },\n    initiateGame: (state, action: PayloadAction<MazeResponse>) => {\n      const {\n        data,\n        pony: [ponyPos],\n        domokun: [domokunPos],\n        'end-point': [exit],\n        'game-state': { state: gameState },\n      } = action.payload\n      state.mazeData = data\n      state.ponyPos = ponyPos\n      state.domokunPos = domokunPos\n      state.exit = exit\n      state.gameStatus = gameState.toLowerCase() as GameState['gameStatus'] // the data from backend is not consistent\n    },\n    startFetching: (state, action: PayloadAction<FetchingKey>) => {\n      state.fetchingState[action.payload] = 'pending'\n    },\n    finishFetching: (state, action: PayloadAction<FetchingKey>) => {\n      state.fetchingState[action.payload] = 'finish'\n    },\n    errorFetching: (state, action: PayloadAction<FetchingKey>) => {\n      state.fetchingState[action.payload] = 'error'\n    },\n    setGameStatus: (state, action: PayloadAction<State>) => {\n      state.gameStatus = action.payload.state\n      if (action.payload.state === 'won' || action.payload.state === 'over') {\n        state.hiddenUrl = action.payload['hidden-url']\n      }\n    },\n    updateGame: (state, action: PayloadAction<MazeResponse>) => {\n      const {\n        pony: [ponyPos],\n        domokun: [domokunPos],\n      } = action.payload\n      state.ponyPos = ponyPos\n      state.domokunPos = domokunPos\n    },\n    resetGame: (state) => {\n      state.gameId = null\n      state.mazeData = []\n      state.gameStatus = 'preparing'\n      state.ponyPos = null\n      state.domokunPos = null\n      state.exit = null\n      state.fetchingState = { game: 'finish', movement: 'finish' }\n      state.hiddenUrl = undefined\n    },\n  },\n})\n\nexport const {\n  setGameId,\n  initiateGame,\n  startFetching,\n  errorFetching,\n  finishFetching,\n  setGameStatus,\n  updateGame,\n  resetGame,\n} = gameSlice.actions\n\nexport const { getGameThunk, movePonyThunk } = thunks\n\nexport default gameSlice.reducer\n","import styled from 'styled-components/macro'\n\nexport const GameWrapper = styled.section`\n  grid-area: game;\n`\n","import React, { FC, useEffect, ReactNode } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Maze } from 'components/maze'\nimport { Image } from 'components/image'\nimport {\n  selectGame,\n  selectFetchPending,\n  selectHasStarted,\n  selectUrl,\n  selectHasFinished,\n} from 'stores/game/selectors'\nimport { selectSettings } from 'stores/settings/selectors'\nimport { movePonyThunk } from 'stores/game/slice'\nimport * as helpers from 'utils/keyboard-actions'\nimport ponyCover from 'assets/img/cover.png'\n\nimport * as s from './game.styles'\nimport { IMG_BASE_URL } from './utils/constants'\n\nexport const Game: FC = () => {\n  const dispatch = useDispatch()\n  const { width, height } = useSelector(selectSettings)\n  const { mazeData, exit, ponyPos, domokunPos } = useSelector(selectGame)\n  const hasStarted = useSelector(selectHasStarted)\n  const hasFinished = useSelector(selectHasFinished)\n  const isFetching = useSelector(selectFetchPending)\n  const gameEndUrl = useSelector(selectUrl)\n\n  useEffect(() => {\n    const keyPressHandler = (evt: KeyboardEvent) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isFetching) {\n        return\n      }\n\n      const { key } = evt\n      const direction = helpers.getDirectionByKey(key)\n\n      if (direction) {\n        dispatch(movePonyThunk(direction))\n      }\n    }\n\n    if (hasStarted) {\n      document.addEventListener('keydown', keyPressHandler)\n    }\n    return () => document.removeEventListener('keydown', keyPressHandler)\n  }, [isFetching, hasStarted, dispatch])\n\n  let image: ReactNode = null\n  if (!hasStarted) {\n    image = <Image src={ponyCover} />\n  } else if (hasFinished) {\n    image = <Image src={`${IMG_BASE_URL}${gameEndUrl}`} />\n  }\n\n  return (\n    <s.GameWrapper>\n      {image}\n      {hasStarted && !hasFinished && (\n        <Maze\n          size={[width, height]}\n          data={mazeData}\n          domokunStartingPos={domokunPos!}\n          ponyStartingPos={ponyPos!}\n          endPointPos={exit!}\n        />\n      )}\n    </s.GameWrapper>\n  )\n}\n","import { Direction } from 'types/directions'\r\n\r\nexport function getDirectionByKey(key: string): Direction | null {\r\n  if (key === 'ArrowUp') {\r\n    return Direction.north\r\n  }\r\n\r\n  if (key === 'ArrowDown') {\r\n    return Direction.south\r\n  }\r\n\r\n  if (key === 'ArrowLeft') {\r\n    return Direction.west\r\n  }\r\n\r\n  if (key === 'ArrowRight') {\r\n    return Direction.east\r\n  }\r\n\r\n  return null\r\n}\r\n","export const IMG_BASE_URL = 'https://ponychallenge.trustpilot.com/'\n","import styled from 'styled-components/macro'\n\nimport { Props } from './index'\n\nexport const StyledButton = styled.button<Props>`\n  width: 100%;\n  appearance: none;\n  background: none;\n  font-family: ${({ theme }) => theme.fonts.body};\n  font-size: 32px;\n  font-weight: bolder;\n  padding-left: 12px;\n  padding-right: 12px;\n  outline: none;\n  border: 2px solid transparent;\n  color: rgb(112, 76, 182);\n  padding-bottom: 4px;\n  cursor: pointer;\n  background-color: rgba(112, 76, 182, 0.1);\n  border-radius: 2px;\n  transition: all 0.15s;\n\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n\n  &[disabled] {\n    cursor: not-allowed;\n    color: rgba(112, 76, 182, 0.4);\n\n    &:hover,\n    &:focus {\n      border: 2px solid transparent;\n      color: rgba(112, 76, 182, 0.4);\n    }\n  }\n`\n","import React from 'react'\n\nimport * as s from './button.styles'\n\nexport interface Props extends React.ComponentPropsWithRef<'button'> {\n  ariaLabel?: string\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, Props>(\n  ({ ariaLabel, type, onClick, children, disabled, ...rest }, ref) => {\n    return (\n      <s.StyledButton\n        {...rest}\n        type={type || 'button'}\n        ref={ref}\n        aria-label={ariaLabel || 'generic button'}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {children}\n      </s.StyledButton>\n    )\n  }\n)\n","import styled from 'styled-components/macro'\n\nexport const ControlWrapper = styled.section`\n  grid-area: button;\n  padding: 6vh 0;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    padding: 3vh 0;\n  }\n`\n","import React, { FC } from 'react'\n\nimport { Button } from 'components/button'\n\nimport * as s from './control.styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectHasStarted } from 'stores/game/selectors'\nimport { resetGame, getGameThunk } from 'stores/game/slice'\nimport { selectSettings } from 'stores/settings/selectors'\nimport { resetSettings } from 'stores/settings/slice'\n\nexport const Control: FC = () => {\n  const { width, height, difficultyLevel, currentPony } = useSelector(selectSettings)\n  const hasStarted = useSelector(selectHasStarted)\n  const dispatch = useDispatch()\n\n  const startGame = () =>\n    currentPony\n      ? dispatch(getGameThunk({ width, height, difficulty: difficultyLevel, pony: currentPony }))\n      : undefined\n\n  const reset = () => {\n    dispatch(resetGame())\n    dispatch(resetSettings())\n  }\n\n  return (\n    <s.ControlWrapper>\n      {hasStarted && <Button onClick={reset}>Reset Game</Button>}\n      {!hasStarted && (\n        <Button onClick={startGame} disabled={!currentPony}>\n          Start Game\n        </Button>\n      )}\n    </s.ControlWrapper>\n  )\n}\n","import styled from 'styled-components/macro'\n\nexport const PageLayout = styled.main`\n  background-color: ${({ theme }) => theme.colors.light['shade-100']};\n  opacity: 0.9;\n  border-radius: 5px;\n  height: calc(100vh - 8vh - 8vh);\n  margin: 8vh 10vw;\n  padding: 2vh 4vw;\n  display: grid;\n  grid-template-areas:\n    'game setting'\n    'game button';\n  grid-template-columns: 2fr 1fr;\n  grid-template-rows: 1fr auto;\n  grid-gap: 5vw;\n\n  > * {\n    display: grid;\n    grid-gap: 2.5vw;\n    align-content: center;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    grid-template-areas:\n      'game game'\n      'setting button';\n    grid-template-columns: 1fr auto;\n    grid-template-rows: 1fr auto;\n    grid-gap: 2vh;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\n    margin: 8vh 4vw;\n    grid-template-areas:\n      'game'\n      'setting'\n      'button';\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr auto auto;\n    grid-gap: 2vh;\n  }\n`\n","import React from 'react'\r\nimport { GameSetting } from 'containers/game-setting'\r\nimport { Game } from 'containers/game'\r\nimport { Control } from 'containers/control'\r\n\r\nimport * as s from './app.styles'\r\n\r\nconst App = () => {\r\n  return (\r\n    <s.PageLayout>\r\n      <Game />\r\n      <GameSetting />\r\n      <Control />\r\n    </s.PageLayout>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/* eslint-disable no-console */\nconst logger = (store: any) => (next: any) => (action: any) => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  const result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n/* eslint-enable no-console */\n\nexport default logger\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nimport * as thunks from './thunks'\r\n\r\ninterface CounterState {\r\n  value: number\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport const { incrementAsync } = thunks\r\n\r\nexport default counterSlice.reducer\r\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport loggerMiddleware from './utils/logger'\nimport counterReducer from './counter/slice'\nimport settingsReducer from './settings/slice'\nimport gameReducer from './game/slice'\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    settings: settingsReducer,\n    game: gameReducer,\n  },\n  middleware: [loggerMiddleware, ...getDefaultMiddleware()],\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","export const theme = {\n  colors: {\n    primary: '#AAABD3',\n    secondary: '#CBA6C3',\n    dark: {\n      'shade-100': '#353866',\n    },\n    light: {\n      'shade-100': '#F8FAFF',\n    },\n  },\n  fonts: {\n    title: \"'Lobster Two', cursive\",\n    body: \"'Arvo', serif\",\n  },\n  breakpoints: {\n    tablet: '768px',\n    mobile: '420px',\n  },\n}\n","import { createGlobalStyle } from 'styled-components'\n\nimport dotBackground from 'assets/img/dot-background.png'\n\nexport const GlobalStyle = createGlobalStyle`\n   body {\n      margin: 0;\n      font-family: ${({ theme }) => theme.fonts.body};\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      background-image: url(${dotBackground});\n      background-size: cover;\n   }\n\n   code {\n      font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n   }\n\n   *, * > * {\n      box-sizing: border-box;\n   }\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'containers/app'\nimport { store } from 'stores/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { ThemeProvider } from 'styled-components'\nimport { theme } from 'sc/theme'\nimport { GlobalStyle } from 'sc/global-styles'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}